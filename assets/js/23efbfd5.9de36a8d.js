"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9917],{3905:(t,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>f});var r=e(7294);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function l(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var u=r.createContext({}),d=function(t){var n=r.useContext(u),e=n;return t&&(e="function"==typeof t?t(n):l(l({},n),t)),e},p=function(t){var n=d(t.components);return r.createElement(u.Provider,{value:n},t.children)},c="mdxType",s={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(t,n){var e=t.components,a=t.mdxType,i=t.originalType,u=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),c=d(e),m=a,f=c["".concat(u,".").concat(m)]||c[m]||s[m]||i;return e?r.createElement(f,l(l({ref:n},p),{},{components:e})):r.createElement(f,l({ref:n},p))}));function f(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var i=e.length,l=new Array(i);l[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=t,o[c]="string"==typeof t?t:a,l[1]=o;for(var d=2;d<i;d++)l[d]=e[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,e)}m.displayName="MDXCreateElement"},1307:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=e(7462),a=(e(7294),e(3905));const i={title:"\u6392\u5e8f\u7b97\u6cd5\u7b14\u8bb0",date:new Date("2018-02-04T22:12:16.000Z"),tags:["coding","note"]},l=void 0,o={permalink:"/2018/02/04/sorting-algorithms",source:"@site/blog/2018-02-04-sorting-algorithms/index.md",title:"\u6392\u5e8f\u7b97\u6cd5\u7b14\u8bb0",description:"\u4ece\u63a5\u89e6\u7b97\u6cd5\u5c31\u5f00\u59cb\u8bf4\u7684\u6392\u5e8f\uff0c\u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u3002",date:"2018-02-04T22:12:16.000Z",formattedDate:"2018\u5e742\u67084\u65e5",tags:[{label:"coding",permalink:"/tags/coding"},{label:"note",permalink:"/tags/note"}],readingTime:6.775,hasTruncateMarker:!0,authors:[],frontMatter:{title:"\u6392\u5e8f\u7b97\u6cd5\u7b14\u8bb0",date:"2018-02-04T22:12:16.000Z",tags:["coding","note"]},prevItem:{title:"So Far So Good",permalink:"/2018/03/25/so-far-so-good"},nextItem:{title:"\u6570\u636e\u7ed3\u6784\u7b14\u8bb0",permalink:"/2017/12/19/data-structure-note"}},u={authorsImageUrls:[]},d=[{value:"Bubble Sort",id:"bubble-sort",level:2},{value:"Selection Sort",id:"selection-sort",level:2},{value:"Insertion Sort",id:"insertion-sort",level:2},{value:"Merge Sort",id:"merge-sort",level:2},{value:"Quick Sort",id:"quick-sort",level:2}],p={toc:d},c="wrapper";function s(t){let{components:n,...e}=t;return(0,a.kt)(c,(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u4ece\u63a5\u89e6\u7b97\u6cd5\u5c31\u5f00\u59cb\u8bf4\u7684\u6392\u5e8f\uff0c\u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u3002"),(0,a.kt)("h2",{id:"bubble-sort"},"Bubble Sort"),(0,a.kt)("p",null,"\u5192\u6ce1\u6392\u5e8f\u662f\u6700\u57fa\u7840\u7684\u6392\u5e8f\u4e86\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\u57fa\u672c\u6b65\u9aa4\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u6bd4\u8f83\u4e24\u4e2a\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u5de6\u8fb9\u7684\u503c\u66f4\u5927\uff0c\u5219\u4ea4\u6362\u4e24\u4e2a\u503c\u7684\u4f4d\u7f6e\uff0c\u4ee5\u5c06\u66f4\u5927\u7684\u503c\u6392\u5230\u53f3\u8fb9"),(0,a.kt)("li",{parentName:"ul"},"\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func bubbleSort(data: inout [Int]) {\n    for outerIdx in stride(from: data.count - 1, to: 0, by: -1) {\n        for innerIdx in 0 ..< outerIdx {\n            if data[innerIdx] > data[innerIdx + 1] {\n                (data[innerIdx], data[innerIdx + 1]) = (data[innerIdx + 1], data[innerIdx])\n            }\n        }\n    }\n}\n")),(0,a.kt)("p",null,"\u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0cworst-case \u4e0b\u9700\u8981\u6267\u884c\u4ea4\u6362\u7684\u6b21\u6570\u4e3a n(n - 1)/2\uff0c\u9700\u8981\u6bd4\u8f83\u7684\u6b21\u6570\u4e5f\u4e3a n(n - 1)/2\u3002\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\u3002\u5192\u6ce1\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u3002"),(0,a.kt)("h2",{id:"selection-sort"},"Selection Sort"),(0,a.kt)("p",null,"\u9009\u62e9\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u5feb\u4e00\u70b9\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u57fa\u672c\u6b65\u9aa4\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9009\u62e9\u6700\u5c0f\u7684\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u628a\u5b83\u548c\u6700\u5de6\u8fb9\u7684\u5143\u7d20\u4ea4\u6362")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func selectionSort(data: inout [Int]) {\n    for outerIdx in 0 ..< data.count - 1 {\n        // set initial min value's index\n        var minimum = outerIdx\n        // select a new minimum value's index\n        for innerIdx in outerIdx + 1 ..< data.count {\n            if data[innerIdx] < data[minimum] {\n                // if new min, reset index\n                minimum = innerIdx\n            }\n        }\n        if outerIdx != minimum {\n            (data[outerIdx], data[minimum]) = (data[minimum], data[outerIdx])\n        }\n    }\n}\n")),(0,a.kt)("p",null,"\u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0cworst-case \u4e0b\u9700\u8981\u6267\u884c\u4ea4\u6362\u7684\u6b21\u6570\u4e3a n - 1\uff0c\u9700\u8981\u6bd4\u8f83\u7684\u6b21\u6570\u4e3a n(n - 1)/2\u3002\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\u3002\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u3002"),(0,a.kt)("h2",{id:"insertion-sort"},"Insertion Sort"),(0,a.kt)("p",null,"\u63d2\u5165\u6392\u5e8f\u6bd4\u524d\u4e24\u4e2a\u90fd\u5feb\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u5173\u952e\u5728\u4e8e\u6709\u4e00\u6761\u60f3\u8c61\u7684\u5206\u754c\u7ebf\u3002\u4e3b\u8981\u601d\u8def\u662f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5206\u754c\u7ebf\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u6392\u597d\u5e8f\u4e86"),(0,a.kt)("li",{parentName:"ul"},"\u5206\u754c\u7ebf\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u88ab\u63d2\u5230\u5de6\u8fb9\u7684\u4e00\u4e2a\u6070\u5f53\u4f4d\u7f6e\u4e2d",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u9996\u5148\uff0c\u628a\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u5b58\u5230\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u4e2d"),(0,a.kt)("li",{parentName:"ul"},"\u628a\u5de6\u8fb9\u7684\u5143\u7d20\u5168\u90e8\u5411\u53f3\u79fb\u4e00\u4f4d\uff0c\u4ece\u800c\u53ef\u4ee5\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u8981\u63d2\u5165\u7684\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u627e\u5230\u4f4d\u7f6e\u540e\uff0c\u63d2\u5165\u4e34\u65f6\u53d8\u91cf\u4e2d\u7684\u503c")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func insertionSort(data: inout [Int]) {\n    guard !data.isEmpty else {\n        return\n    }\n    for outerIdx in 1 ..< data.count {\n        let tmp = data[outerIdx]\n        var innerIdx = outerIdx\n        // go backward in the left side of the line\n        // shift the values\n        while innerIdx > 0, data[innerIdx - 1] >= tmp {\n            data[innerIdx] = data[innerIdx - 1]\n            innerIdx -= 1\n        }\n        if outerIdx != innerIdx {\n            data[innerIdx] = tmp\n        }\n    }\n}\n")),(0,a.kt)("p",null,"\u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0cworst-case \u4e0b\u9700\u8981\u6bd4\u8f83\u7684\u6b21\u6570\u4e3a n(n - 1) / 2\uff0c\u5982\u679c\u662f\u968f\u673a\u5206\u5e03\u7684\u6570\u7ec4\u5219\u8868\u73b0\u4f1a\u66f4\u597d\u3002\u63d2\u5165\u6392\u5e8f\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e3a O(n^2)\uff0c\u6700\u597d\u7684\u60c5\u51b5\u4e0b\u4e3a O(n)\uff08\u8f93\u5165\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u60c5\u51b5\u4e0b\uff09\u3002\u63d2\u5165\u6392\u5e8f\u4e5f\u662f\u7a33\u5b9a\u7684\u3002"),(0,a.kt)("h2",{id:"merge-sort"},"Merge Sort"),(0,a.kt)("p",null,"\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u662f divide and conquer algorithms \u7684\u4e00\u4e2a\u751f\u52a8\u7684\u4f8b\u5b50\u3002\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u4e3a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7528\u5f52\u5e76\u6392\u5e8f\u6392\u597d\u524d\u4e00\u534a"),(0,a.kt)("li",{parentName:"ul"},"\u7528\u5f52\u5e76\u6392\u5e8f\u6392\u597d\u540e\u4e00\u534a"),(0,a.kt)("li",{parentName:"ul"},"\u5f52\u5e76\u6392\u597d\u5e8f\u7684\u4e24\u534a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func mergeSort(data: [Int]) -> [Int] {\n\n    // helper that merges two parts\n    func merge(_ a: [Int], _ b: [Int]) -> [Int] {\n        var merged: [Int] = []\n        var aIdx = 0\n        var bIdx = 0\n        while aIdx < a.count && bIdx < b.count {\n            if a[aIdx] < b[bIdx] {\n                merged.append(a[aIdx])\n                aIdx += 1\n            } else {\n                merged.append(b[bIdx])\n                bIdx += 1\n            }\n        }\n        if aIdx < a.count {\n            merged += a[aIdx ..< a.count]\n        }\n        if bIdx < b.count {\n            merged += b[bIdx ..< b.count]\n        }\n        return merged\n    }\n\n    if data.count <= 1 {\n        return data\n    }\n\n    let mid = data.count / 2\n    // create left array\n    let left = Array(data[0 ..< mid])\n    // create right array\n    let right = Array(data[mid ..< data.count])\n    // call itself with left half\n    let sortedLeft = mergeSort(data: left)\n    // call itself with right half\n    let sortedRight = mergeSort(data: right)\n    // merge\n    return merge(sortedLeft, sortedRight)\n}\n")),(0,a.kt)("p",null,"\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u662f\u7a33\u5b9a\u7684\u3002"),(0,a.kt)("h2",{id:"quick-sort"},"Quick Sort"),(0,a.kt)("p",null,"\u5feb\u901f\u6392\u5e8f\u7684\u601d\u8def\u4e3b\u8981\u6709\u4e09\u6b65\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u628a\u6570\u7ec4\u5206\u6210\u5de6\u534a\u90e8\u5206\uff08\u8f83\u5c0f\u503c\uff09\u548c\u53f3\u534a\u90e8\u5206\uff08\u8f83\u5927\u503c\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u7528\u5feb\u901f\u6392\u5e8f\u6392\u5e8f\u5de6\u534a\u90e8\u5206"),(0,a.kt)("li",{parentName:"ul"},"\u7528\u5feb\u901f\u6392\u5e8f\u6392\u5e8f\u53f3\u534a\u90e8\u5206")),(0,a.kt)("p",null,"\u4e2d\u5fc3\u601d\u60f3\u5c31\u662f partitioning\uff0c\u9700\u8981\u9009\u62e9\u4e00\u4e2a pivot value \u6765\u51b3\u5b9a\u6bcf\u4e2a\u503c\u5c5e\u4e8e\u54ea\u4e2a\u90e8\u5206\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func quickSort(data: inout [Int]) {\n\n    func partition(arr: inout [Int], left: Int, right: Int, pivot: Int) -> Int {\n        var leftPtr = left\n        var rightPtr = right\n        while true {\n            while arr[leftPtr] < pivot {\n                leftPtr += 1\n            }\n            while rightPtr > 0, arr[rightPtr] > pivot {\n                rightPtr -= 1\n            }\n            if leftPtr >= rightPtr {\n                break\n            } else {\n                (arr[leftPtr], arr[rightPtr]) = (arr[rightPtr], arr[leftPtr])\n            }\n        }\n        return leftPtr\n    }\n\n    func quickSortHelper(data: inout [Int], left: Int, right: Int) {\n        // base case\n        if left >= right {\n            return\n        }\n        // last value is pivot\n        let pivot = data[right]\n        let partition = partition(arr: &data, left: left, right: right, pivot: pivot)\n        quickSortHelper(data: &data, left: left, right: partition - 1)\n        quickSortHelper(data: &data, left: partition + 1, right: right)\n    }\n\n    quickSortHelper(data: &data, left: 0, right: data.count - 1)\n\n}\n")),(0,a.kt)("p",null,"\u8fd9\u662f\u4e00\u79cd\u539f\u4f4d\u7f6e\u6392\u5e8f\u7684\u5b9e\u73b0\u3002\u5229\u7528 Swift \u8bed\u8a00\u7684\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4e00\u79cd\u8fdc\u8fdc\u66f4\u4e3a\u7b80\u6d01\u7684\u5b9e\u73b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func quickSortV2(data: [Int]) -> [Int] {\n    if data.count <= 1 {\n        return data\n    }\n    var unsorted = data\n    // initialize arrays\n    var left: [Int] = []\n    var right: [Int] = []\n    // pick pivot value\n    let pivot = unsorted.popLast()!\n    for x in unsorted {\n        if x < pivot {\n            left.append(x)\n        } else {\n            right.append(x)\n        }\n    }\n    // call itself\n    return quickSortV2(data: left) + [pivot] + quickSortV2(data: right)\n}\n")),(0,a.kt)("p",null,"\u5feb\u901f\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\u3002\u6839\u636e\u4e0b\u9762\u548c\u5927\u4f6c\u540c\u5b66 ",(0,a.kt)("a",{parentName:"p",href:"https://dinglisa.com/blog/"},"@LisaDing")," \u7684\u8ba8\u8bba\uff0c\u539f\u5730\u5feb\u901f\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u53ef\u4ee5\u4e3a O(log n)\uff08\u5373\u9012\u5f52\u6df1\u5ea6\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4fdd\u5b58\u5e38\u6570\u4fe1\u606f\uff0c\u6808\u5e27\u91cc\u603b\u5171\u5c31\u4f1a\u6709 log n\uff0c\u5177\u4f53\u8ba8\u8bba\u53ef\u89c1 ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/12573330/why-does-quicksort-use-ologn-extra-space"},"\u8fd9\u91cc"),"\uff09\uff0cworst case \u4e3a O(n)\u3002\u7b2c\u4e8c\u79cd\u975e\u539f\u5730\u7684\u5feb\u901f\u6392\u5e8f\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\uff08\u5177\u4f53\u89c1 ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/38487269/space-complexity-of-quick-sort"},"stackoverflow \u7684\u8fd9\u4e2a\u5e16\u5b50"),"\uff09\u3002\u56e0\u6b64\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u5177\u4f53\u5b9e\u73b0\u5173\u7cfb\u5f88\u5927\u3002\u5feb\u901f\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u3002"))}s.isMDXComponent=!0}}]);